Terraform Bases on HCL --> HashiCorp Configuration Language.

intialize terraform -->

terraform init --> terraform will check for providers. It will download AWS providers and keep them...

terraform plan --> terraform will shows us the resources it is going to create

validates syntax, if correct then it will show the resource it will create.

terraform apply -auto-approve --> creates infra

terraform destroy -auto-approve --> destroys infra

tagging strategy
-----------------
name of the resource
which project
which module
which environment
who created
which date

Preference for Variables:
------------------------
1st Command line ( terraform plan -var="instance_type=t3.medium")
2nd variables.tfvars
3rd Environment Variables (export TF_VAR_instance_type=t3.heavy)
4th Default vlaues

Terraform Functions: https://developer.hashicorp.com/terraform/language/functions

$ terraform console
> max(12,34,21)
> max(12,34,21)
34
> min(34,12,43)
> min(34,12,43)
12

Numeric Functions: (min, max, abs, ceil, floor, log, pow, signum, parseint)
String Functions: (split, lower, upper, split, startswith, endwith, ......)
.
.
.
Till now we use these functions: merge, length

Merge Function,
> merge({a="b", c="d"}, {e="f", c="z"})
{
  "a" = "b"
  "c" = "z"
  "e" = "f"
}
